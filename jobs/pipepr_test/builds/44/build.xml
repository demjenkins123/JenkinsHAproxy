<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.36">
  <actions>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>repo</name>
          <description></description>
          <value>jenkindemo1</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>commitid</name>
          <description></description>
          <value>b01f9d6db6941602ad8b4dba24f559f52e14921c</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>pr</name>
          <description></description>
          <value>6</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>branch</name>
          <description></description>
          <value>develop</value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>repo</string>
        <string>commitid</string>
        <string>pr</string>
        <string>branch</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-RemoteCause>
            <addr>35.223.53.23</addr>
          </hudson.model.Cause_-RemoteCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.15">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.78">
      <env class="tree-map">
        <entry>
          <string>file</string>
          <string>plugins/jaxb.hpi</string>
        </entry>
        <entry>
          <string>list_files</string>
          <string>[plugins/jaxb.hpi]</string>
        </entry>
        <entry>
          <string>pr</string>
          <string>6</string>
        </entry>
        <entry>
          <string>repo</string>
          <string>jenkindemo1</string>
        </entry>
      </env>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <hudson.plugins.git.util.BuildData plugin="git@4.1.0">
      <buildsByBranchName>
        <entry>
          <string>origin/develop</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.1.0">
              <sha1>b01f9d6db6941602ad8b4dba24f559f52e14921c</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>origin/develop</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>44</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>http://35.223.53.23:7990/scm/JEN/jenkindemo1.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.git.GitTagAction plugin="git@4.1.0">
      <tags class="hudson.util.CopyOnWriteMap$Tree">
        <entry>
          <string>origin/develop</string>
          <list/>
        </entry>
      </tags>
      <ws>/var/lib/jenkins/workspace/pipepr_test</ws>
    </hudson.plugins.git.GitTagAction>
    <com.sonyericsson.rebuild.RebuildAction plugin="rebuild@1.31"/>
  </actions>
  <queueId>121</queueId>
  <timestamp>1579707313900</timestamp>
  <startTime>1579707313915</startTime>
  <result>SUCCESS</result>
  <duration>36204</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>import groovy.json.JsonSlurper
node(){
    try{
        
        print pr
        env.pr=pr
        print commitid
        env.repo=repo
        print repo
        print branch
        stage(&apos;Checkout&apos;){
            checkout changelog: false, poll: false, scm: [$class: &apos;GitSCM&apos;, branches: [[name: &quot;$branch&quot;]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: &apos;36686a20-adb7-47ac-999f-4e5c2d9a3dbe&apos;, url: &quot;http://35.223.53.23:7990/scm/JEN/&quot;+repo+&quot;.git&quot;]]]
        }
        stage(&apos;Copy Files&apos;){
            def json = sh label: &apos;&apos;, returnStdout: true, 
                        script: &apos;&apos;&apos;json=$(curl -k -u admin:admin http://35.223.53.23:7990/rest/api/latest/projects/JEN/repos/$repo/pull-requests/$pr/changes?limit=1000)
                        echo &quot;$json&quot; &gt; test.json&apos;&apos;&apos;
            json=readJSON file: &apos;test.json&apos;
            //def slurper = new JsonSlurper()
            //def result = slurper.parseText(json)
            def list = json.get(&quot;values&quot;)
            def list_files= []
            //print list
            for (int i=0;i&lt;list.size();i++){
                def val = list[i].get(&quot;path&quot;)
                if(!list_files.contains(val.get(&quot;toString&quot;)))
                    list_files.add(val.get(&quot;toString&quot;))
            }
            
            print &quot;===============================================&quot;
            print list_files
            env.list_files=list_files
        	for(int j=0;j&lt;list_files.size();j++){
        		env.file=list_files[j]
        		sh&apos;&apos;&apos;
        			sudo cp -rfv --parent $file /mnt/jenkinsbackup/
        		&apos;&apos;&apos;
        	}
        }
        deleteDir()
        currentBuild.result = &apos;SUCCESS&apos;
    }catch(err) {
        currentBuild.result = &apos;FAILED&apos;      
    }
    stage(&apos;Notify&apos;){
        notifyBitbucket commitSha1: &apos;&apos;, considerUnstableAsSuccess: false, credentialsId: &apos;36686a20-adb7-47ac-999f-4e5c2d9a3dbe&apos;, disableInprogressNotification: false, ignoreUnverifiedSSLPeer: true, includeBuildNumberInKey: false, prependParentProjectKey: false, projectKey: &apos;&apos;, stashServerBaseUrl: &apos;http://35.223.53.23:7990&apos;
    }
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>279123646</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>243238582</long>
      </entry>
      <entry>
        <string>run</string>
        <long>623616658</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>170799467</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>42911748</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>31</iota>
    <head>1:31</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.1.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>http://35.223.53.23:7990/scm/JEN/jenkindemo1.git</url>
            <credentialsId>36686a20-adb7-47ac-999f-4e5c2d9a3dbe</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>develop</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions/>
      </scm>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/pipepr_test</workspace>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>